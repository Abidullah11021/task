////********** AUTOGENERATED FILE: DO NOT REMOVE ANY COMMENT IN THIS STYLE **********////
////********** START IMPORTS **********////
import '../../domain/repository/auth_repository.dart';
import 'package:injectable/injectable.dart';
import '../../domain/data/auth_remote_datasource.dart';
import '../../domain/usecases/login.dart';
import '../../domain/usecases/register.dart';
import '../../domain/usecases/google_login.dart';
////********** END IMPORTS **********////

@LazySingleton(as: AuthRepository)
class AuthRepositoryImp implements AuthRepository {
////********** START VARIABLES **********////
  final AuthRemoteDataSource _authRemoteDataSource;
////********** END VARIABLES **********////

AuthRepositoryImp({
////********** START RECEIVE VALUES **********////
    required AuthRemoteDataSource authRemoteDataSource,
////********** END RECEIVE VALUES **********////
  })  :
////********** START SET VALUES **********////
        _authRemoteDataSource = authRemoteDataSource
////********** END SET VALUES **********////
  ;
    
////********** START METHODS **********////
  /// [LoginUsecaseInput] is received to [login] method as parameter
  /// [LoginUsecaseOutput] is returned from [login] method
  @override
  Future<LoginUsecaseOutput> login(LoginUsecaseInput input) async {
    return _authRemoteDataSource.login(input);
  }
  

  /// [RegisterUsecaseInput] is received to [register] method as parameter
  /// [RegisterUsecaseOutput] is returned from [register] method
  @override
  Future<RegisterUsecaseOutput> register(RegisterUsecaseInput input) async {
    return _authRemoteDataSource.register(input);
  }


  /// [GoogleLoginUsecaseInput] is received to [googleLogin] method as parameter
  /// [GoogleLoginUsecaseOutput] is returned from [googleLogin] method
  @override
  Future<GoogleLoginUsecaseOutput> googleLogin(GoogleLoginUsecaseInput input) async {
    return _authRemoteDataSource.googleLogin(input);
  }

////********** END METHODS **********////
}
  
